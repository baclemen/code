<UserControl x:Class="SavedVideoInterpreter.PropertiesControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SavedVideoInterpreter" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <local:FilePathConverter x:Key="pathConverter" />
        <local:PtypeToVisualConverter x:Key="ptypeConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <ItemsPanelTemplate x:Key="HorizontalTemplate">
            <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>


        <DataTemplate x:Key="ExampleTemplate" DataType="{x:Type local:Example}">
            <StackPanel Orientation="Horizontal">


                <Border BorderThickness="3" Margin="5" Background="White" MouseDown="Image_MouseUp"  MaxHeight="50" MaxWidth="100">
                    <Border.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=IsSelected}" Value="True">
                                    <Setter Property="Border.BorderBrush" Value="Green"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=IsSelected}" Value="False">
                                    <Setter Property="Border.BorderBrush" Value="#84bd68"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Image Stretch="Uniform" 
                       Source="{Binding IsAsync=True, Path=Img}"
                 />
                </Border>
                <Button Visibility="{Binding IsAsync=True, Path=IsSelected, Converter={StaticResource BoolToVis}}"  
                        BorderBrush="DarkGray" Background="LightGray" HorizontalAlignment="Left" 
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        VerticalAlignment="Top" Height="13" Width="13" FontSize="8"
                         Margin="-13,5,0,0" Padding="0,0,0,0">

                    <TextBlock Margin="0,-2,0,0" TextAlignment="Center">x</TextBlock>

                </Button>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="NegativeExampleTemplate" DataType="{x:Type local:Example}">
            <StackPanel Orientation="Horizontal">


                <Border BorderThickness="3" Margin="5" Background="White" MouseDown="Image_MouseUp" MaxWidth="100"  MaxHeight="50">
                    <Border.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=IsSelected}" Value="True">
                                    <Setter Property="Border.BorderBrush" Value="DarkRed"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=IsSelected}" Value="False">
                                    <Setter Property="Border.BorderBrush" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Image Stretch="Uniform" 
                       Source="{Binding IsAsync=True,Path=Img}"
                       />


                </Border>
                <Button Visibility="{Binding IsAsync=True, Path=IsSelected, Converter={StaticResource BoolToVis}}"  
                        BorderBrush="DarkGray" Background="LightGray" HorizontalAlignment="Left" 
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        VerticalAlignment="Top" Height="13" Width="13" FontSize="8"
                         Margin="-13,5,0,0" Padding="0,0,0,0">

                    <TextBlock Margin="0,-2,0,0" TextAlignment="Center">x</TextBlock>

                </Button>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="AnnotationTemplate" DataType="{x:Type local:AnnotationKeyValuePair}">
            <StackPanel Orientation="Vertical">

                
            <StackPanel Orientation="Horizontal">
                <TextBox Margin="0,6,4,0" Foreground="White" Text="{Binding Path=Key,Mode=OneWay}" Background="Transparent" IsReadOnly="True" BorderThickness="0"  MouseDoubleClick="Label_MouseDoubleClick">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" >
                            
                            <Setter Property="Template">
                                
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <ContentPresenter RecognizesAccessKey="False"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                    <TextBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete Annotation" Click="DeleteAnnotationClick" />
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
                    <StackPanel Orientation="Horizontal">
                <TextBox IsReadOnly="True" VerticalAlignment="Center" Foreground="White" Background="Transparent" Text="{Binding Path=Key}" BorderThickness="0"></TextBox>
                <TextBox IsReadOnly="True" VerticalAlignment="Center" Foreground="White" Background="Transparent" BorderThickness="0"> : </TextBox>
                <TextBox IsReadOnly="True" VerticalAlignment="Center" Foreground="White" Margin="0,3,0,0" 
                                         Background="Transparent" BorderThickness="0"  
                                         Text="{Binding Path=Value, Mode=OneWay}"></TextBox>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <StackPanel>
        
        <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1"  Width="50" Height="50"
                        Background="White" MouseDown="Border_MouseDown" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAsync=True, Path=Prototype.IsSelected}" Value="True">
                                <Setter Property="Border.BorderBrush" Value="DarkBlue"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAsync=True, Path=Prototype.IsSelected}" Value="False">
                                <Setter Property="Border.BorderBrush" Value="DarkGray"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=Prototype.IsContent}" Value="True">
                                    <Setter Property="Content" Value="{Binding Path=Prototype.CapturedImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAsync=True, Path=Prototype.IsContent}" Value="False">
                                    <Setter Property="Content" Value="{Binding IsAsync=True, Path=Prototype.CapturedImage}" />
                                    <!--<Setter Property="Content" Value="{Binding IsAsync=True, Path=Prototype.PrototypeVisual,Converter={StaticResource ptypeConverter}}" />-->
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Border>
            <StackPanel>
                
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="White" VerticalAlignment="Center">Path Descriptor:</Label>
                    <TextBox Foreground="White" Background="Transparent" IsReadOnly="True" 
                     BorderThickness="0" VerticalAlignment="Center" Text="{Binding Path=NodePath,Mode=OneWay}"></TextBox>
                </StackPanel>
            </StackPanel>
            
        </StackPanel>

        <!--<Border BorderBrush="LightGray" BorderThickness="1">
            <StackPanel Orientation="Horizontal">

                
               


                <Button Visibility="{Binding IsAsync=True, Path=Prototype.IsSelected, Converter={StaticResource BoolToVis}}"  
                        BorderBrush="DarkGray" Background="LightGray" HorizontalAlignment="Left" 
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        VerticalAlignment="Top" Height="13" Width="13" FontSize="8" Margin="-13,5,-8,-8" Padding="0,0,0,0">

                    <TextBlock Margin="0,-2,0,0" TextAlignment="Center">x</TextBlock>

                </Button>-->


                <!--<StackPanel Orientation="Vertical">
                <Label FontSize="8" Foreground="White" HorizontalAlignment="Center">Positive Examples</Label>
                <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding IsAsync=True, Path=Prototype.PositiveExamples}"
                              ItemsPanel="{StaticResource HorizontalTemplate}"
                              ItemTemplate="{StaticResource ExampleTemplate}"
                              >

                </ItemsControl>
                </StackPanel>
                
                <StackPanel Orientation="Vertical">
                <Label FontSize="8" Foreground="White" HorizontalAlignment="Center">Negative Examples</Label>
                <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding IsAsync=True, Path=Prototype.NegativeExamples}"
                              ItemsPanel="{StaticResource HorizontalTemplate}"
                              ItemTemplate="{StaticResource NegativeExampleTemplate}"
                              >

                </ItemsControl>
                </StackPanel>
            </StackPanel>
        </Border>-->
        
        <TextBox Foreground="White" Background="Transparent" IsReadOnly="True" BorderThickness="0" Text="{Binding Path=StaticMetadata,Mode=OneWay}"></TextBox>
        <Label Foreground="White">Tags:</Label>
        <ItemsControl ItemsSource="{Binding Path=Annotations}"
                      
                      ItemTemplate="{StaticResource AnnotationTemplate}"
                      >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"></StackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <!--<Label Content="Annotations for this node:" Foreground="White"></Label>
        <StackPanel Orientation="Horizontal" Margin="5,5,5,5">
            <TextBox Name="AnnotationValueBox" Background="Transparent" BorderBrush="White" Foreground="White" Width="400" Margin="5,0,0,0"></TextBox>
        </StackPanel>
        <Button Content="Update Annotations" HorizontalAlignment="Left" Margin="5,5,5,5" IsEnabled="False" Click="SubmitAnnotationClick"></Button>-->
    </StackPanel>
</UserControl>
